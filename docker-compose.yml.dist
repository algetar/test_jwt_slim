version: "3.1"
services:

    nginx:
        image: nginx:1.21.4-alpine
        container_name: nginx
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./app/docker/nginx/conf.d/:/etc/nginx/conf.d/
        environment:
            - TZ=Europe/Moscow
        ports:
            - "${NGINX_HTTP_PORT}:80"
        networks:
            app_network:
                ipv4_address: 172.22.0.2

    app:
        image: app-php
        container_name: app
        restart: unless-stopped
        build:
            context: ./
            dockerfile: app/docker/Dockerfile
        environment:
            TZ: Europe/Moscow
            PHP_IDE_CONFIG: "serverName=myapp"
        working_dir: /var/www/
        volumes:
            - ./app/docker/php/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./app/docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./:/var/www
        networks:
            app_network:
                ipv4_address: 172.22.0.3

    # MySQL database service
    db:
        image: postgres:12.8
        container_name: db
        restart: unless-stopped
        volumes:
            - db:/var/lib/postgresql/data
        environment:
            - TZ=Europe/Moscow
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
        ports:
            - "${DB_PORT}:5432"
        networks:
            app_network:
                ipv4_address: 172.22.0.4

networks:
    app_network:
        ipam:
            driver: default
            config:
                - subnet: 172.22.0.0/16

volumes:
    db: